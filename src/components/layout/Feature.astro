---
import { useTranslations } from "@/i18n/utils";
import { featureData } from "@/data/FeatureData";

import FeatureCard from "../FeatureCard.astro";
import type { TypeLang } from "@/lib/types";

interface Props {
  lang: TypeLang;
}

const { lang } = Astro.props as Props;
const t = useTranslations(lang);
---

<section
  aria-label="features"
  class="container mx-auto px-4 md:px-2 sm:px-6 max-w-7xl pt-16"
>
  <header
    aria-labelledby="features"
    aria-label="features-heading"
    class="flex flex-col items-center justify-center text-center"
  >
    <h2 id="features-heading" class="text-4xl font-bold mb-2 text-primary">
      {t("features.heading")}
    </h2>
    <article
      class="text-lg text-muted-foreground font-normal mb-9 md:w-2/3 w-full"
    >
      {t("features.description.1")}
    </article>
  </header>
  <ul class="grid lg:grid-cols-3 md:grid-cols-2 grid-cols-1 gap-5">
    {
      featureData.map((feature, idx) => (
        <li
          aria-label={feature.alt}
          class={`${idx === 2 ? "lg:col-span-1 md:col-span-2 col-span-1" : "lg:col-span-1"}`}
        >
          <FeatureCard {...feature} lang={lang} />
        </li>
      ))
    }
  </ul>
</section>
